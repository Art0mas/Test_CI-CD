name: CI/CD (Python)

on:
  push:
    branches: [ "**" ]
  pull_request:

permissions:
  contents: read
  deployments: write

env:
  PYTHON_VERSION: '3.12'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Get pip cache dir
        id: pip-cache
        run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: pip-${{ runner.os }}-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest --junitxml=report.xml || true

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit-report
          path: report.xml

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test]   # виконується після успішного тестування
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install build tools
        run: pip install build

      - name: Build Python package
        run: python -m build --outdir dist/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-build
          path: dist/
